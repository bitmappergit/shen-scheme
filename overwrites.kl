"Copyright (c) 2012-2015 Bruno Deferrari.  All rights reserved.
BSD 3-Clause License: http://opensource.org/licenses/BSD-3-Clause"

(defun cd (V1421) (let Dir (if (= V1421 "") (scm.current-directory) (scm.string-append V1421 "/")) (let NewDir (scm.change-directory Dir) (set *home-directory* (scm.current-directory)))))

(defun hash (V1424 V1425) (scm.hash V1424 V1425))

(defun not (V1427) (scm.not V1427))

(defun boolean? (V1429) (scm.boolean? V1429))

(defun integer? (V1431) (scm.integer? V1431))

(defun variable? (V1433) (scm.and (scm.symbol? V1433) (scm.char-upper-case? (scm.string-ref (scm.symbol->string V1433) 0))))

(defun symbol? (V1435) (scm.symbol? V1435))

(defun shen.pvar? (V1437) (scm.and (absvector? V1437) (scm.and (scm.> (scm.vector-length V1437) 0) (scm.eq? (scm.vector-ref V1437 0) shen.pvar))))

(defun shen.numbyte? (V1439) (scm.and (scm.>= V1439 48) (scm.<= V1439 57)))

(defun shen.byte->digit (V1441) (scm.- V1441 48))

(defun dict (V1443) (scm.make-hash-table))

(defun dict? (V1445) (scm.hash-table? V1445))

(defun dict-count (V1447) (scm.hash-table-size V1447))

(defun dict-> (V1451 V1452 V1453) (scm.hash-table-set! V1451 V1452 V1453))

(defun <-dict/or (V1457 V1458 V1459) (scm.hash-table-ref V1457 V1458 V1459))

(defun dict-rm (V1462 V1463) (scm.hash-table-delete! V1462 V1463))

(defun dict-fold (V1467 V1468 V1469) (scm.hash-table-fold V1467 V1468 V1469))

(defun dict-keys (V1471) (scm.hash-table-keys V1471))

(defun dict-values (V1473) (scm.hash-table-values V1473))

(defun exit (V1475) (scm.exit V1475))

(defun value/or (V1478 V1479) (scm.value/or V1478 V1479))

(defun <-address/or (V1483 V1484 V1485) (if (>= V1484 (scm.vector-length V1483)) (thaw V1485) (scm.vector-ref V1483 V1484)))

(defun read-file-as-bytelist (V1487) (scm.read-file-as-bytelist V1487))

(defun read-file-as-charlist (V1489) (scm.read-file-as-bytelist V1489))

(defun read-file-as-string (V1491) (scm.read-file-as-string V1491))



